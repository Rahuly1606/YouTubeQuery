# =============================================================================
# QueryTube Environment Configuration
# =============================================================================

# -----------------------------------------------------------------------------
# REQUIRED: YouTube Data API v3
# -----------------------------------------------------------------------------
# Get your API key from: https://console.cloud.google.com/
# 1. Create/select project
# 2. Enable "YouTube Data API v3"
# 3. Create credentials (API Key)
YOUTUBE_API_KEY=your_youtube_api_key_here

# -----------------------------------------------------------------------------
# OPTIONAL: HuggingFace (only needed for private models)
# -----------------------------------------------------------------------------
# Get token from: https://huggingface.co/settings/tokens
HF_TOKEN=your_huggingface_token_here

# -----------------------------------------------------------------------------
# Vector Store Configuration
# -----------------------------------------------------------------------------
# Options: faiss, pinecone, chroma
VECTOR_STORE=faiss

# Embedding model (sentence-transformers)
# Options: all-MiniLM-L6-v2, all-mpnet-base-v2, multi-qa-MiniLM-L6-cos-v1
EMBEDDING_MODEL=all-MiniLM-L6-v2

# -----------------------------------------------------------------------------
# Pinecone Configuration (if VECTOR_STORE=pinecone)
# -----------------------------------------------------------------------------
PINECONE_API_KEY=your_pinecone_api_key
PINECONE_ENVIRONMENT=us-west1-gcp
PINECONE_INDEX_NAME=querytube

# -----------------------------------------------------------------------------
# Database Configuration
# -----------------------------------------------------------------------------
# For local development (SQLite)
DATABASE_URL=sqlite:///./querytube.db

# For production (PostgreSQL) - example for Railway/Render
# DATABASE_URL=postgresql://user:password@host:5432/dbname

# -----------------------------------------------------------------------------
# Backend Configuration
# -----------------------------------------------------------------------------
BACKEND_HOST=0.0.0.0
BACKEND_PORT=8000
BACKEND_RELOAD=true

# CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# -----------------------------------------------------------------------------
# Frontend Configuration
# -----------------------------------------------------------------------------
# Backend API URL (used by Next.js frontend)
NEXT_PUBLIC_API_URL=http://localhost:8000

# Enable analytics (optional)
NEXT_PUBLIC_ENABLE_ANALYTICS=false

# -----------------------------------------------------------------------------
# Data Pipeline Configuration
# -----------------------------------------------------------------------------
# Default channel ID for testing (Google Developers channel)
DEFAULT_CHANNEL_ID=UC_x5XG1OV2P6uZZ5FSM9Ttw

# Maximum results per API call
MAX_RESULTS_PER_REQUEST=50

# Batch size for embedding generation
EMBEDDING_BATCH_SIZE=32

# Data directories
DATA_DIR=./data
INDEX_PATH=./data/index.faiss
EMBEDDINGS_PATH=./data/embeddings.parquet
VIDEOS_PATH=./data/videos.parquet
TRANSCRIPTS_PATH=./data/transcripts.parquet

# -----------------------------------------------------------------------------
# Rate Limiting & Quotas
# -----------------------------------------------------------------------------
# YouTube API daily quota (default: 10000 units)
YOUTUBE_API_QUOTA_LIMIT=10000

# API rate limiting (requests per minute)
RATE_LIMIT_PER_MINUTE=60

# -----------------------------------------------------------------------------
# Search Configuration
# -----------------------------------------------------------------------------
# Default number of results to return
DEFAULT_TOP_K=5

# Maximum allowed top_k
MAX_TOP_K=50

# Distance metric: cosine, euclidean, dot_product
DISTANCE_METRIC=cosine

# Minimum similarity score threshold (0-1)
MIN_SIMILARITY_SCORE=0.3

# -----------------------------------------------------------------------------
# Docker Configuration
# -----------------------------------------------------------------------------
COMPOSE_PROJECT_NAME=querytube

# -----------------------------------------------------------------------------
# CI/CD Configuration
# -----------------------------------------------------------------------------
# Docker Hub username (for pushing images)
DOCKER_USERNAME=your_docker_username

# GitHub Container Registry
GHCR_USERNAME=your_github_username

# -----------------------------------------------------------------------------
# Production Deployment URLs
# -----------------------------------------------------------------------------
# Set these after deploying to production
PRODUCTION_API_URL=https://your-backend.railway.app
PRODUCTION_FRONTEND_URL=https://your-app.vercel.app

# -----------------------------------------------------------------------------
# Optional: OpenAI (for future features)
# -----------------------------------------------------------------------------
# OPENAI_API_KEY=your_openai_key

# -----------------------------------------------------------------------------
# Optional: Monitoring & Analytics
# -----------------------------------------------------------------------------
# SENTRY_DSN=your_sentry_dsn
# GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX
